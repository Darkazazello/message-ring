%% script generated at {2014,3,26} {12,48,58}
{script,
    {"hello_world_example","1"},
    [{preLoaded,
         [erl_prim_loader,erlang,init,otp_ring0,prim_file,prim_inet,prim_zip,
          zlib]},
     {progress,preloaded},
     {path,["$ROOT/lib/kernel-2.15.1/ebin","$ROOT/lib/stdlib-1.18.1/ebin"]},
     {primLoad,[error_handler]},
     {kernel_load_completed},
     {progress,kernel_load_completed},
     {path,["$ROOT/lib/kernel-2.15.1/ebin"]},
     {primLoad,
         [application,application_controller,application_master,
          application_starter,auth,code,code_server,disk_log,disk_log_1,
          disk_log_server,disk_log_sup,dist_ac,dist_util,erl_boot_server,
          erl_ddll,erl_distribution,erl_epmd,erl_reply,error_logger,
          erts_debug,file,file_io_server,file_server,gen_sctp,gen_tcp,gen_udp,
          global,global_group,global_search,group,heart,hipe_unified_loader,
          inet,inet6_sctp,inet6_tcp,inet6_tcp_dist,inet6_udp,inet_config,
          inet_db,inet_dns,inet_gethost_native,inet_hosts,inet_parse,inet_res,
          inet_sctp,inet_tcp,inet_tcp_dist,inet_udp,kernel,kernel_config,net,
          net_adm,net_kernel,os,packages,pg2,ram_file,rpc,seq_trace,
          standard_error,user,user_drv,user_sup,wrap_log_reader]},
     {path,["$ROOT/lib/stdlib-1.18.1/ebin"]},
     {primLoad,
         [array,base64,beam_lib,binary,c,calendar,dets,dets_server,dets_sup,
          dets_utils,dets_v8,dets_v9,dict,digraph,digraph_utils,edlin,
          edlin_expand,epp,erl_bits,erl_compile,erl_eval,erl_expand_records,
          erl_internal,erl_lint,erl_parse,erl_posix_msg,erl_pp,erl_scan,
          erl_tar,error_logger_file_h,error_logger_tty_h,escript,ets,
          eval_bits,file_sorter,filelib,filename,gb_sets,gb_trees,gen,
          gen_event,gen_fsm,gen_server,io,io_lib,io_lib_format,io_lib_fread,
          io_lib_pretty,lib,lists,log_mf_h,math,ms_transform,orddict,ordsets,
          otp_internal,pg,pool,proc_lib,proplists,qlc,qlc_pt,queue,random,re,
          sets,shell,shell_default,slave,sofs,string,supervisor,
          supervisor_bridge,sys,timer,unicode,win32reg,zip]},
     {path,["$ROOT/lib/ranch-0.9.0/ebin"]},
     {primLoad,
         [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,ranch_conns_sup,
          ranch_listener_sup,ranch_protocol,ranch_server,ranch_ssl,ranch_sup,
          ranch_tcp,ranch_transport]},
     {path,["$ROOT/lib/crypto-2.1/ebin"]},
     {primLoad,[crypto,crypto_app,crypto_server,crypto_sup]},
     {path,["$ROOT/lib/mongodb-0.2.1/ebin"]},
     {primLoad,
         [mongo,mongo_connect,mongo_cursor,mongo_protocol,mongo_query,
          mongo_replset,mongodb_app,mongodb_tests,mvar,resource_pool]},
     {path,["$ROOT/lib/bson-0/ebin"]},
     {primLoad,[bson,bson_binary,bson_tests]},
     {path,["$ROOT/lib/jsx-1.4.5/ebin"]},
     {primLoad,
         [jsx,jsx_config,jsx_decoder,jsx_encoder,jsx_parser,jsx_to_json,
          jsx_to_term,jsx_verify]},
     {path,["$ROOT/lib/cowlib-0.5.1/ebin"]},
     {primLoad,
         [cow_cookie,cow_date,cow_http,cow_mimetypes,cow_multipart,cow_qs,
          cow_spdy]},
     {path,["$ROOT/lib/mongrel-1.1.6/ebin"]},
     {primLoad,
         [mongrel,mongrel_app,mongrel_cursor,mongrel_mapper,mongrel_sup,
          mongrel_types]},
     {path,["$ROOT/lib/cowboy-0.9.0/ebin"]},
     {primLoad,
         [cowboy,cowboy_app,cowboy_bstr,cowboy_client,cowboy_clock,
          cowboy_handler,cowboy_http,cowboy_http_handler,cowboy_loop_handler,
          cowboy_middleware,cowboy_protocol,cowboy_req,cowboy_rest,
          cowboy_router,cowboy_spdy,cowboy_static,cowboy_sub_protocol,
          cowboy_sup,cowboy_websocket,cowboy_websocket_handler]},
     {path,["$ROOT/lib/hello_world-1/ebin"]},
     {primLoad,
         [create_handler,hello_world_app,hello_world_sup,list_handler,
          log_handler,main_sup,ring_handler,ring_handler_sup,run_handler,
          toppage_handler]},
     {progress,modules_loaded},
     {path,
         ["$ROOT/lib/kernel-2.15.1/ebin","$ROOT/lib/stdlib-1.18.1/ebin",
          "$ROOT/lib/ranch-0.9.0/ebin","$ROOT/lib/crypto-2.1/ebin",
          "$ROOT/lib/mongodb-0.2.1/ebin","$ROOT/lib/bson-0/ebin",
          "$ROOT/lib/jsx-1.4.5/ebin","$ROOT/lib/cowlib-0.5.1/ebin",
          "$ROOT/lib/mongrel-1.1.6/ebin","$ROOT/lib/cowboy-0.9.0/ebin",
          "$ROOT/lib/hello_world-1/ebin"]},
     {kernelProcess,heart,{heart,start,[]}},
     {kernelProcess,error_logger,{error_logger,start_link,[]}},
     {kernelProcess,application_controller,
         {application_controller,start,
             [{application,kernel,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"2.15.1"},
                   {id,[]},
                   {modules,
                       [application,application_controller,application_master,
                        application_starter,auth,code,packages,code_server,
                        dist_util,erl_boot_server,erl_distribution,erl_reply,
                        error_handler,error_logger,file,file_server,
                        file_io_server,global,global_group,global_search,
                        group,heart,hipe_unified_loader,inet6_tcp,
                        inet6_tcp_dist,inet6_udp,inet6_sctp,inet_config,
                        inet_hosts,inet_gethost_native,inet_tcp_dist,kernel,
                        kernel_config,net,net_adm,net_kernel,os,ram_file,rpc,
                        user,user_drv,user_sup,disk_log,disk_log_1,
                        disk_log_server,disk_log_sup,dist_ac,erl_ddll,
                        erl_epmd,erts_debug,gen_tcp,gen_udp,gen_sctp,inet,
                        inet_db,inet_dns,inet_parse,inet_res,inet_tcp,
                        inet_udp,inet_sctp,pg2,seq_trace,standard_error,
                        wrap_log_reader]},
                   {registered,
                       [application_controller,erl_reply,auth,boot_server,
                        code_server,disk_log_server,disk_log_sup,
                        erl_prim_loader,error_logger,file_server_2,
                        fixtable_server,global_group,global_name_server,heart,
                        init,kernel_config,kernel_sup,net_kernel,net_sup,rex,
                        user,os_server,ddll_server,erl_epmd,inet_db,pg2]},
                   {applications,[]},
                   {included_applications,[]},
                   {env,[{error_logger,tty}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{kernel,[]}}]}]}},
     {progress,init_kernel_started},
     {apply,
         {application,load,
             [{application,stdlib,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"1.18.1"},
                   {id,[]},
                   {modules,
                       [array,base64,beam_lib,binary,c,calendar,dets,
                        dets_server,dets_sup,dets_utils,dets_v8,dets_v9,dict,
                        digraph,digraph_utils,edlin,edlin_expand,epp,
                        eval_bits,erl_bits,erl_compile,erl_eval,
                        erl_expand_records,erl_internal,erl_lint,erl_parse,
                        erl_posix_msg,erl_pp,erl_scan,erl_tar,
                        error_logger_file_h,error_logger_tty_h,escript,ets,
                        file_sorter,filelib,filename,gb_trees,gb_sets,gen,
                        gen_event,gen_fsm,gen_server,io,io_lib,io_lib_format,
                        io_lib_fread,io_lib_pretty,lib,lists,log_mf_h,math,
                        ms_transform,orddict,ordsets,otp_internal,pg,pool,
                        proc_lib,proplists,qlc,qlc_pt,queue,random,re,sets,
                        shell,shell_default,slave,sofs,string,supervisor,
                        supervisor_bridge,sys,timer,unicode,win32reg,zip]},
                   {registered,
                       [timer_server,rsh_starter,take_over_monitor,
                        pool_master,dets]},
                   {applications,[kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ranch,
                  [{description,"Socket acceptor pool for TCP protocols."},
                   {vsn,"0.9.0"},
                   {id,[]},
                   {modules,
                       [ranch_tcp,ranch_conns_sup,ranch_transport,
                        ranch_acceptor,ranch_sup,ranch_app,ranch_listener_sup,
                        ranch_acceptors_sup,ranch_server,ranch,ranch_protocol,
                        ranch_ssl]},
                   {registered,[ranch_sup,ranch_server]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ranch_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,crypto,
                  [{description,"CRYPTO version 2"},
                   {vsn,"2.1"},
                   {id,[]},
                   {modules,[crypto,crypto_app,crypto_sup,crypto_server]},
                   {registered,[crypto_sup,crypto_server]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{crypto_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,mongodb,
                  [{description,
                       "Client interface to MongoDB, also known as the driver. See www.mongodb.org"},
                   {vsn,"0.2.1"},
                   {id,[]},
                   {modules,
                       [mongodb_app,mongo,mongo_protocol,mongo_connect,
                        mongo_query,mongo_cursor,mvar,mongodb_tests,
                        mongo_replset,resource_pool]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{mongodb_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,bson,
                  [{description,
                       "BSON are JSON-like objects with a standard binary serialization. See bsonspec.org."},
                   {vsn,"0"},
                   {id,[]},
                   {modules,[bson,bson_binary,bson_tests]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,jsx,
                  [{description,"a streaming, evented json parsing toolkit"},
                   {vsn,"1.4.5"},
                   {id,[]},
                   {modules,
                       [jsx,jsx_encoder,jsx_decoder,jsx_parser,jsx_to_json,
                        jsx_to_term,jsx_config,jsx_verify]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,cowlib,
                  [{description,
                       "Support library for manipulating Web protocols."},
                   {vsn,"0.5.1"},
                   {id,[]},
                   {modules,
                       [cow_date,cow_spdy,cow_cookie,cow_qs,cow_mimetypes,
                        cow_multipart,cow_http]},
                   {registered,[]},
                   {applications,[kernel,stdlib,crypto]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,mongrel,
                  [{description,"MongoDB Record/Document Mapper"},
                   {vsn,"1.1.6"},
                   {id,[]},
                   {modules,
                       [mongrel,mongrel_app,mongrel_cursor,mongrel_mapper,
                        mongrel_sup,mongrel_types]},
                   {registered,[mongrel_sup,mongrel_mapper]},
                   {applications,[kernel,stdlib,mongodb]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{mongrel_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowboy,
                  [{description,"Small, fast, modular HTTP server."},
                   {vsn,"0.9.0"},
                   {id,[]},
                   {modules,
                       [cowboy_loop_handler,cowboy_app,cowboy_static,
                        cowboy_websocket,cowboy_sup,cowboy_websocket_handler,
                        cowboy_rest,cowboy_handler,cowboy_clock,cowboy_spdy,
                        cowboy_http,cowboy_sub_protocol,cowboy_client,
                        cowboy_protocol,cowboy_middleware,cowboy_req,cowboy,
                        cowboy_bstr,cowboy_router,cowboy_http_handler]},
                   {registered,[cowboy_clock,cowboy_sup]},
                   {applications,[kernel,stdlib,ranch,crypto,cowlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{cowboy_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,hello_world,
                  [{description,"Cowboy Hello World example."},
                   {vsn,"1"},
                   {id,[]},
                   {modules,
                       [log_handler,hello_world_app,hello_world_sup,
                        ring_handler_sup,ring_handler,main_sup,list_handler,
                        toppage_handler,run_handler,create_handler]},
                   {registered,[hello_world_sup,main_sup]},
                   {applications,
                       [kernel,stdlib,mongodb,bson,jsx,mongrel,cowboy]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{hello_world_app,[]}}]}]}},
     {progress,applications_loaded},
     {apply,{application,start_boot,[kernel,permanent]}},
     {apply,{application,start_boot,[stdlib,permanent]}},
     {apply,{application,start_boot,[ranch,permanent]}},
     {apply,{application,start_boot,[crypto,permanent]}},
     {apply,{application,start_boot,[mongodb,permanent]}},
     {apply,{application,start_boot,[bson,permanent]}},
     {apply,{application,start_boot,[jsx,permanent]}},
     {apply,{application,start_boot,[cowlib,permanent]}},
     {apply,{application,start_boot,[mongrel,permanent]}},
     {apply,{application,start_boot,[cowboy,permanent]}},
     {apply,{application,start_boot,[hello_world,permanent]}},
     {apply,{c,erlangrc,[]}},
     {progress,started}]}.
